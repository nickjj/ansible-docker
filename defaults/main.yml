---

docker__edition: "ce"
docker__channel: ["stable"]
docker__version: ""
docker__state: "present"

docker__compose_version: ""

docker__users: ["{{ ansible_env.SUDO_USER | d('root') }}"]

docker__registries: []

docker__default_daemon_json: |
  "log-driver": "journald"

docker__daemon_json: ""

docker__daemon_flags:
  - "-H unix://"

docker__daemon_environment: []

docker__systemd_override: ""

docker__cron_jobs_prune_flags: "af"
docker__cron_jobs:
  - name: "Docker disk clean up"
    job: "docker system prune -{{ docker__cron_jobs_prune_flags }} > /dev/null 2>&1"
    schedule: ["0", "0", "*", "*", "0"]
    cron_file: "docker-disk-clean-up"
    user: "{{ (docker__users | first) | d('root') }}"

docker__apt_package_dependencies:
  - "apt-transport-https"
  - "ca-certificates"
  - "cron"
  - "gnupg2"
  - "software-properties-common"

docker__dnf_package_dependencies:
  - "ca-certificates"
  - "cronie"
  - "gnupg2"
  - "libselinux-python"

docker__apt_key_id: "9DC858229FC7DD38854AE2D88D81803C0EBFCD88"
docker__apt_key_url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
docker__apt_repository: >
  deb [arch=amd64]
  https://download.docker.com/linux/{{ ansible_distribution | lower }}
  {{ ansible_distribution_release }} {{ docker__channel | join (' ') }}

docker__apt_pip_dependencies:
  - "python-setuptools"
  - "python{{ '3' if ansible_python.version.major == 3 else '' }}-pip"

docker__dnf_pip_dependencies:
  - "python{{ ansible_python.version.major }}"
  - "python{{ ansible_python.version.major }}-pip"
  - "python{{ ansible_python.version.major }}-libs"
  - "python{{ ansible_python.version.major }}-setuptools"

docker__pip_virtualenv: "/usr/local/lib/docker/virtualenv"

docker__default_pip_packages:
  - name: "docker"
    state: "{{ docker__pip_docker_state }}"
  - name: "docker-compose"
    version: "{{ docker__compose_version }}"
    path: "/usr/local/bin/docker-compose"
    src: "{{ docker__pip_virtualenv + '/bin/docker-compose' }}"
    state: "{{ docker__pip_docker_compose_state }}"
docker__pip_packages: []

docker__pip_docker_state: "present"
docker__pip_docker_compose_state: "present"
