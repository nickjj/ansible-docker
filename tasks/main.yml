---

- name: Fail if Docker version is < 17.03
  fail:
    msg: "docker_version must be >= 17.03, yours is set to {{ docker_version }}."
  when: docker_version | version_compare("17.03", "<")

- name: Install Docker and role dependencies
  apt:
    name: "{{ item }}"
    state: "present"
    install_recommends: False
    update_cache: True
    cache_valid_time: "{{ docker_apt_cache_time }}"
  with_items:
    - "apt-transport-https"
    - "ca-certificates"
    - "software-properties-common"
    - "cron"

- name: Get upstream APT GPG key
  apt_key:
    id: "{{ docker_apt_key }}"
    keyserver: "{{ ansible_local.core.keyserver
                   if (ansible_local|d() and ansible_local.core|d() and
                       ansible_local.core.keyserver)
                   else apt.keyserver }}"
    state: "present"

- name: Configure upstream APT repository
  apt_repository:
    repo: "{{ docker_repository }}"
    state: "present"
    update_cache: True

- name: Install Docker
  apt:
    name: "docker-{{ docker_edition }}={{ docker_apt_package_name }}"
    state: "present"
    update_cache: True
    install_recommends: False
    cache_valid_time: "{{ docker_apt_cache_time }}"

- name: Remove Upstart config file
  file:
    path: "/etc/default/docker"
    state: "absent"

- name: Ensure systemd directory exists
  file:
    path: "/etc/systemd/system"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"

- name: Generate systemd unit file
  template:
    src: "etc/systemd/system/docker.service.j2"
    dest: "/etc/systemd/system/docker.service"
    owner: "root"
    group: "root"
    mode: "0644"
  register: docker_register_systemd_service

- name: Reload systemd daemon
  command: "systemctl daemon-reload"
  notify: ["Restart Docker"]
  when: (docker_register_systemd_service and
         docker_register_systemd_service | changed)

- name: Add specific users to "docker" group
  user:
    name: "{{ item }}"
    groups: "docker"
    append: True
  with_items: "{{ docker_users }}"
  when: docker_users

- name: Install Docker Compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64"
    dest: "/usr/local/bin/docker-compose"
    force: True
    owner: "root"
    group: "root"
    mode: "0755"
  when: docker_install_docker_compose

- name: Create cron tasks for Docker commands
  cron:
    name: "{{ item.name }}"
    job: "{{ item.job }}"
    minute: "{{ item.schedule[0] }}"
    hour: "{{ item.schedule[1] }}"
    day: "{{ item.schedule[2] }}"
    month: "{{ item.schedule[3] }}"
    weekday: "{{ item.schedule[4] }}"
  with_items: "{{ docker_cron_tasks }}"
  when: docker_cron_tasks
